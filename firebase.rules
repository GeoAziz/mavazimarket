
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Products: Anyone can read. Admins can write.
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true; // Requires admin custom claim

      // Reviews subcollection under products
      match /reviews/{reviewId} {
        allow read: if true;
        // Logged-in users can create reviews
        allow create: if request.auth != null;
        // Users can only update/delete their own reviews
        allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      }
    }

    // Categories: Anyone can read. Admins can write.
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true; // Requires admin custom claim
    }

    // Users:
    // Each user can read and write their own profile.
    // Admins can read any user profile for management.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allow user creation on signup
      allow list, get: if request.auth != null && request.auth.token.admin == true; // Admins can list/get all users
    }

    // Orders:
    // Users can read/create/update their own orders. (Update might be limited in practice)
    // Admins can manage all orders.
    match /orders/{orderId} {
      allow read, create: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid; // Or admin
      // Admin full access
      allow read, list, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Discounts: Authenticated users can read. Admins can write.
    // (Consider if unauthenticated users should read discounts for display - if so, change read rule)
    match /discounts/{discountId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Settings: Publicly readable. Admins can write.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Fallback: Deny all other access by default for security.
    // Any path not explicitly matched above will be denied.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
